// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client'

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] }

/**
 * Item in *archive → potpotpot*
 */
export interface ArchiveDocumentDataPotpotpotItem {
  /**
   * name field in *archive → potpotpot*
   *
   * - **Field Type**: Text
   * - **Placeholder**: name
   * - **API ID Path**: archive.potpotpot[].name
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField

  /**
   * price field in *archive → potpotpot*
   *
   * - **Field Type**: Number
   * - **Placeholder**: price
   * - **API ID Path**: archive.potpotpot[].price
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  price: prismic.NumberField

  /**
   * image field in *archive → potpotpot*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: archive.potpotpot[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>
}

/**
 * Content for archive documents
 */
interface ArchiveDocumentData {
  /**
   * potpotpot field in *archive*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: archive.potpotpot[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  potpotpot: prismic.GroupField<Simplify<ArchiveDocumentDataPotpotpotItem>>
}

/**
 * archive document from Prismic
 *
 * - **API ID**: `archive`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ArchiveDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
  Simplify<ArchiveDocumentData>,
  'archive',
  Lang
>

/**
 * Item in *homepage → products*
 */
export interface HomepageDocumentDataProductsItem {
  /**
   * image field in *homepage → products*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.products[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>

  /**
   * name field in *homepage → products*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.products[].name
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField

  /**
   * price field in *homepage → products*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.products[].price
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  price: prismic.NumberField
}

/**
 * Content for homepage documents
 */
interface HomepageDocumentData {
  /**
   * hero field in *homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.hero
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  hero: prismic.ImageField<never>

  /**
   * contact field in *homepage*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.contact
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  contact: prismic.Repeatable<prismic.LinkField>

  /**
   * products field in *homepage*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.products[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  products: prismic.GroupField<Simplify<HomepageDocumentDataProductsItem>>
}

/**
 * homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismic.PrismicDocumentWithoutUID<
  Simplify<HomepageDocumentData>,
  'homepage',
  Lang
>

export type AllDocumentTypes = ArchiveDocument | HomepageDocument

declare module '@prismicio/client' {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig
    ): prismic.WriteClient<AllDocumentTypes>
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>
  }

  namespace Content {
    export type {
      ArchiveDocument,
      ArchiveDocumentData,
      ArchiveDocumentDataPotpotpotItem,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataProductsItem,
      AllDocumentTypes,
    }
  }
}
